@model WebApp.Models.DeadlineSchedulingParametersViewModel

@{
    ViewData["Title"] = "Scheduler - algorytm EDF";
}

<h1>@ViewData["Title"]</h1>

<hr />
<div class="col-md-12">
    <form asp-action="EdfResult">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="row col-md-4">
            <div class="form-group">
                <label asp-for="ExecutionTime"></label>
                <input asp-for="ExecutionTime" class="form-control" />
                <span asp-validation-for="ExecutionTime" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">

            @if (Model.DeadlineParameters.Any())
            {
                for (var i = 0; i < Model.DeadlineParameters.Count(); i++)
                {
                    <div class="form-row">
                        @Html.Hidden($"DeadlineParameters[{i}].ThreadNo", i.ToString())

                        <div class="form-group col-md-4">
                            <label>@Html.DisplayNameFor(model => model.DeadlineParameters.ElementAt(0).Capacity)</label>
                            <input name="DeadlineParameters[@i].Capacity" asp-for="@Model.DeadlineParameters.ElementAt(i).Capacity" class="form-control"/>
                            <span asp-validation-for="@Model.DeadlineParameters.ElementAt(i).Capacity" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-4">
                            <label>@Html.DisplayNameFor(model => model.DeadlineParameters.ElementAt(0).Period)</label>
                            <input name="DeadlineParameters[@i].Period" asp-for="@Model.DeadlineParameters.ElementAt(i).Period" class="form-control"/>
                            <span asp-validation-for="@Model.DeadlineParameters.ElementAt(i).Period" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-4">
                            <label asp-for="@Model.DeadlineParameters.ElementAt(i).Deadline"></label>
                            <input name="DeadlineParameters[@i].Deadline" asp-for="@Model.DeadlineParameters.ElementAt(i).Deadline" class="form-control"/>
                            <span asp-validation-for="@Model.DeadlineParameters.ElementAt(i).Deadline" class="text-danger"></span>
                        </div>
                    </div>
                }
            }
            else
            {
                @Html.Hidden("0", new { name = $"DeadlineParameters[0].ThreadNo" })

                <div class="form-group">
                    <label>@Html.DisplayNameFor(model => model.DeadlineParameters.ElementAt(0).Capacity)</label>
                    <input name="DeadlineParameters[0].Capacity" class="form-control" />
                </div>

                <div class="form-group">
                    <label>@Html.DisplayNameFor(model => model.DeadlineParameters.ElementAt(0).Period)</label>
                    <input name="DeadlineParameters[0].Period" class="form-control" />
                </div>

                <div class="form-group">
                    <label>@Html.DisplayNameFor(model => model.DeadlineParameters.ElementAt(0).Deadline)</label>
                    <input name="DeadlineParameters[0].Deadline" class="form-control" />
                </div>
            }

        </div>

        <div class="form-group">
            <input type="submit" value="Rozpocznij" class="btn btn-primary" />
            <a asp-action="Index">Wróć</a>
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}