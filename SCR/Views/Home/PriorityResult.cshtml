@model WebApp.Models.ExecuteLogicViewModel

@{
    ViewData["Title"] = "Scheduler - algorytm priorytetowy";
}

<h1>@ViewData["Title"]</h1>

<hr />

<div class="col-md-12">
    <div class="col-md-12">
        <h2>Podsumowanie</h2>
        <div class="form-group">
            <label asp-for="GenerateCount" class="control-label"></label>
            <a> > @Model.GenerateCount</a>
        </div>
        <div class="form-group">
            <label asp-for="GenerationIntervalFrom" class="control-label"></label>
            <a> > @Model.GenerationIntervalFrom</a>
        </div>
        <div class="form-group">
            <label asp-for="GenerationIntervalTo" class="control-label"></label>
            <a> > @Model.GenerationIntervalTo</a>
        </div>
        <div class="form-group">
            <label asp-for="CostFrom" class="control-label"></label>
            <a> > @Model.CostFrom</a>
        </div>
        <div class="form-group">
            <label asp-for="CostTo" class="control-label"></label>
            <a> > @Model.CostTo</a>
        </div>
    </div>

    <div class="row">
        <partial name="_GanttChartPartial" />
    </div>

    <div class="row">
        <div style="width: 50%" id="thread-container">
            <h2>Wykres</h2>

            <input type="hidden" id="thread-type" value="@((int)BusinessLogic.Enums.EScheduleType.Priority)" />

            <ul class="list-group">
                <li class="list-group-item">Oczekiwanie na dane...</li>
            </ul>
        </div>

        <div style="width: 50%" id="logs-container">
            <h2>Logi</h2>

            <ul class="list-group">
                <li class="list-group-item">Oczekiwanie na dane...</li>
            </ul>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        setInterval(refreshLogsContainer, 1000);
        setInterval(refreshThreadContainer, 1000);
    </script>
}