@using System.Linq
@model WebApp.Models.PrioritySchedulingParametersViewModel

@{
    ViewData["Title"] = "Scheduler - algorytm priorytetowy";
}

<h1>@ViewData["Title"]</h1>

<hr />

<div class="col-md-12">
    <div class="row">
        <div class="col-md-5">
            <h2>Zadane parametry</h2>
            
            <br/>

            <p><b>@Html.DisplayNameFor(model => model.ExecutionTime):</b> @Html.DisplayFor(model => model.ExecutionTime)</p>

            <table class="table table-hover">
                <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.PriorityParameters.GetEnumerator().Current.Capacity)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.PriorityParameters.GetEnumerator().Current.Period)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.PriorityParameters.GetEnumerator().Current.Priority)</th>
                </tr>
                </thead>
                <tbody>
                @for (var i = 0; i < Model.PriorityParameters.Count(); i++)
                {
                    <tr>
                        <th scope="row">@(i+1)</th>
                        <td>@Model.PriorityParameters.ElementAt(i).Capacity</td>
                        <td>@Model.PriorityParameters.ElementAt(i).Period</td>
                        <td>@Model.PriorityParameters.ElementAt(i).Priority</td>
                    </tr>
                }
                </tbody>
            </table>
            
            
            <div id="logs-container">
                <h2>Logi</h2>

                <ul class="list-group">
                    <li class="list-group-item">Oczekiwanie na dane...</li>
                </ul>
            </div>
        </div>

        <div class="col-md-7" style="min-height: 700px;">
            <partial name="_GanttChartPartial" model="Model.ThreadExecutionSequence" />
        </div>
    </div>
</div>

@section Scripts {
    <script>
        setTimeout(function () { refreshLogsContainer(); }, 2000);
    </script>
}